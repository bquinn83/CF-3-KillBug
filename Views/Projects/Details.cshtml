@using Microsoft.AspNet.Identity
@using KillBug.Models

@model Project

@{
    ViewBag.Title = "Project: " + Model.Name;
}

<div class="row">
    <!--DETAILS-->
    <div class="col-md-4">
        <div class="block">
            <div class="title row no-gutters mb-0">
                <div class="col-10">
                    <strong>Details</strong>
                </div>
                <div class="ml-auto"><i class="fas fa-lg fa-chevron-up btn btn-block-minimize"></i></div>
            </div>
            <div class="block-body collapsable">
                @using (Html.BeginForm("Edit", "Projects", FormMethod.Post, new { id = "edit-form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.Created)
                    <div class="form-horizontal">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-control-label col-md-4" })
                            <div class="col-md-8 font-weight-bold project-details">
                                @Html.DisplayFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-md-8 project-input d-none">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-control-label col-md-4" })
                            <div class="col-md-8 font-weight-bold project-details">
                                @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-md-8 project-input d-none">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "5" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.Label("Project Manager", htmlAttributes: new { @class = "form-control-label col-md-4" })
                            @if (User.IsInRole("Admin"))
                            {
                                <div class="col-md-8 font-weight-bold project-details">
                                    @if (@Model.ProjectManagerId != null)
                                    {
                                        @Html.DisplayFor(model => model.ProjectManager.FullName)
                                    }
                                    else
                                    {
                                        @Html.DisplayName("- UnAssigned -")
                                    }
                                </div>
                                <div class="col-md-8 project-input d-none">
                                    @Html.DropDownList("ProjectManagerId", null, "- Select Manager -", htmlAttributes: new { @class = "form-control" })
                                </div>
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.ProjectManagerId)
                                <div class="col-md-8 font-weight-bold">
                                    @if (@Model.ProjectManagerId != null)
                                    {
                                        @Html.DisplayFor(model => model.ProjectManager.FullName)
                                    }
                                    else
                                    {
                                        @Html.DisplayName("- UnAssigned -")
                                    }
                                </div>
                            }
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "form-control-label col-md-4" })
                            <div class="col-md-8 font-weight-bold">
                                @Html.DisplayFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        @if (Model.Updated != null)
                        {
                            <div class="form-group row">
                                @Html.Label("Last Update", htmlAttributes: new { @class = "form-control-label col-md-4" })
                                <div class="col-md-8 font-weight-bold">
                                    @Html.DisplayFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        }
                        <div class="form-group row">
                            @Html.LabelFor(model => model.IsArchived, htmlAttributes: new { @class = "form-control-label col-md-4" })
                            <div class="col-md-4 project-details">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.IsArchived, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            @if (User.IsInRole("Admin") || Model.ProjectManagerId == User.Identity.GetUserId())
                            {
                                <div class="col-md-4 project-input d-none">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsArchived, new { @class = "form-control" })
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="col-md-4">
                                    <div class="checkbox">
                                        @Html.DisplayFor(model => model.IsArchived, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            }
                        </div>
                        @if (User.IsInRole("Admin") || Model.ProjectManagerId == User.Identity.GetUserId())
                        {
                            <div class="form-group row">
                                <div class="col-md-2">
                                    <input type="button" value="Edit" class="btn btn-primary" id="edit-details" />
                                    <input type="button" value="Cancel" class="btn btn-secondary d-none" id="edit-cancel" />
                                </div>
                                <div class="col-md-2 ml-auto">
                                    <input type="submit" value="Save" class="btn btn-primary d-none" id="edit-save" />
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    <!--PROJECT TEAM-->
    <div class="col-md-8">
        <div class="block">
            <div class="title row no-gutters mb-0">
                <div class="col-10">
                    <strong>Project Team</strong>
                </div>
                <div class="ml-auto"><i class="fas fa-lg fa-chevron-up btn btn-block-minimize"></i></div>
            </div>
            <div class="block-body collapsable row no-gutters">
                <div class="col-5">
                    <div class="form-group">
                        @Html.Label("Developers", new { @class = "form-control-label" })
                        @Html.ListBox("DeveloperIds", null, new { @class = "form-control", size = "4" })
                        @Html.Label("Submitters", new { @class = "form-control-label" })
                        @Html.ListBox("SubmitterIds", null, new { @class = "form-control", size = "4" })
                    </div>
                </div>
                <div class="col-2">

                </div>
                <div class="col-5">
                    <div class="form-group">
                        @Html.Label("Team", new { @class = "form-control-label" })
                        @Html.ListBox("ProjectTeam", null, new { @class = "form-control", size = "10" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        //SIDE NAV ACTIVE BUTTON
        $('#ProjectsMenu').click()

        //BLOCK CONTROL BUTTONS
        $('.btn-block-minimize').on("click", function (e) {
            $(e.currentTarget).toggleClass(['fa-chevron-up', 'fa-chevron-down'])
            $(e.currentTarget).closest('.block').children('.collapsable').slideToggle()
        });

        //EDIT & CANCEL BUTTONS
        $('#edit-details').on("click", () => {
            $('#edit-details').hide()
            $('#edit-cancel').removeClass("d-none")
            $('#edit-save').removeClass("d-none")
            $('.project-details').hide()
            $('.project-input').removeClass("d-none")
        })
        $('#edit-cancel').on("click", () => {
            $('#edit-details').show()
            $('#edit-cancel').addClass("d-none")
            $('#edit-save').addClass("d-none")
            $('.project-details').show()
            $('.project-input').addClass("d-none")
        })
    </script>
}

@*$(radBtn).click(function() {
                lBox.empty();
                var firstParam = $(':radio:checked').val();
                $.ajax({
                    type: "POST",
                    url: "Services/EmployeeList.asmx/FetchEmpOnGender",
                    data: "{empSex:\"" + firstParam + "\"}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(msg) {
                        var gender = msg.d;
                        if (gender.length > 0) {
                            var listItems = [];
                            for (var key in gender) {
                                listItems.push('<option value="' +
                                key + '">
    ' + gender[key].FName
    + '
</option>');
                            }
                            $(lBox).append(listItems.join(''));
                        }
                        else {
                            alert("No records found");
                        }
                    },
                   error: function(XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }*@