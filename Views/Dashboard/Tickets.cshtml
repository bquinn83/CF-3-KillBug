@using KillBug.ViewModels
@model TicketsDashViewModel

@{
    ViewBag.Title = "Dashboard: Tickets";
}

@if (ViewBag.Create)
{
    <div class="row shortcut-bar">
        <div class="col-auto">
            <div class="shortcut btn" id="shc-create-ticket">Create Ticket&nbsp;<i class="fas fa-plus"></i></div>
        </div>
    </div>
    <div class="row shortcut-row">
        <div class="col-6 d-none" id="create-ticket">
            <div class="block">
                <div class="title row no-gutters mb-0">
                    <div class="col-auto"><strong>Create Ticket</strong></div>
                    <div class="col-auto ml-auto"><i class="fas fa-lg fa-chevron-up btn btn-block-minimize"></i></div>
                    <div class="col-auto"><i class="fas fa-lg fa-times btn btn-block-close"></i></div>
                </div>
                <div class="block-body collapsable">
                    @using (Html.BeginForm("Create", "Tickets"))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "form-control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "3" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new { @class = "form-control-label" })
                                    @Html.DropDownListFor(model => model.ProjectId, null, htmlAttributes: new { @class = "form-control" })
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.TicketTypeId, htmlAttributes: new { @class = "form-control-label" })
                                    @Html.DropDownListFor(model => model.TicketTypeId, null, htmlAttributes: new { @class = "form-control" })
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.TicketPriorityId, htmlAttributes: new { @class = "form-control-label" })
                                    @Html.DropDownListFor(model => model.TicketPriorityId, null, htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                </div>
                            </div>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<!-- CHARTS ROW -->
<div class="row">
    <div class="col-md-4 col-sm-6">
        <div class="block">
            <div class="title row no-gutters mb-0">
                <div class="col-10"><strong class="d-block">Ticket Priority</strong></div>
                <div class="ml-auto"><i class="fas fa-lg fa-chevron-up btn btn-block-minimize" id="collapse-ticket-priorities"></i></div>
            </div>
            <div class="block-body collapsable">
                <canvas id="priority-bar"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4 col-sm-6">
        <div class="block">
            <div class="title row no-gutters mb-0">
                <div class="col-10"><strong class="d-block">Ticket Types</strong></div>
                <div class="ml-auto"><i class="fas fa-lg fa-chevron-up btn btn-block-minimize" id="collapse-ticket-types"></i></div>
            </div>
            <div class="block-body collapsable">
                <canvas id="types-polar"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4 col-sm-6">
        <div class="block">
            <div class="title row no-gutters mb-0">
                <div class="col-10"><strong class="d-block">Ticket Status</strong></div>
                <div class="ml-auto"><i class="fas fa-lg fa-chevron-up btn btn-block-minimize" id="collapse-ticket-status"></i></div>
            </div>
            <div class="block-body collapsable">
                <canvas id="types-doughnut"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        //ACTIVATE SIDE MENU BUTTON
        $('#TicketsMenu').click()
        $('#TicketsDashboard').addClass('active')

        //BLOCK CONTROL BUTTONS
        $('.btn-block-minimize').on("click", function (e) {
            $(e.currentTarget).toggleClass(['fa-chevron-up', 'fa-chevron-down'])
            $(e.currentTarget).closest('.block').children('.collapsable').slideToggle()
        });
        $('.btn-block-close').on("click", function (e) {
            $(e.currentTarget).closest('.block').parent().toggleClass('d-none')
        });

        //SHORTCUT BUTTONS
        $('#shc-create-ticket').on("click", () => {
            $('#create-ticket').removeClass('d-none')
            $('#shortcut-row').prepend($('#create-ticket'))
        })

        $.getJSON("@Url.Action("TicketPriorityChartData", "Charts")", function (response) {
            var ctx = document.getElementById('priority-bar').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: response.Labels,
                    datasets:
                        [{
                            label: response.KeyLabel,
                            data: response.Data,
                            backgroundColor: response.Options.BackgroundColors,
                            borderColor: response.Options.BorderColors,
                            borderWidth: response.Options.BorderWidth
                        }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        });


    </script>
}